{"version":3,"file":"app~a51fa3f5.bundle.js","mappings":";+YACA,8hGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAGA,IAAQC,EAAuDC,EAAAA,EAAAA,cAAxCC,EAAwCD,EAAAA,EAAAA,iBAAtBE,EAAsBF,EAAAA,EAAAA,kBAEzDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACxDI,QADwD,SAChDC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC1D,IAwBH,QArByB,CACjBC,SADiB,SACRC,GAAI,oGACZA,EADY,iEAIHP,EAJG,uCAIQQ,IAAIT,EAAmBQ,IAJ/B,4CAKlB,EACKE,aAPiB,WAOF,iHACLT,EADK,uCACMU,OAAOX,IADb,4CAEpB,EACKY,SAViB,SAURC,GAAO,oGACfA,EAAMC,eAAe,MADN,iEAINb,EAJM,uCAIKc,IAAIf,EAAmBa,IAJ5B,4CAKrB,EACKG,YAhBiB,SAgBLR,GAAI,iHACNP,EADM,8CACYD,EAAmBQ,IAD/B,4CAErB,kDCvBH,QALqB,CACnBS,QAAS,GAAF,OAAKnB,EAAAA,EAAAA,SAAL,QACPoB,OAAQ,SAACV,GAAD,gBAAWV,EAAAA,EAAAA,SAAX,kBAAoCU,EAApC,sPCHV,4wNAcA,QAbMW,iMACJ,sGACyBC,MAAMC,EAAAA,SAD/B,cACQC,EADR,gBAE6BA,EAASC,OAFtC,cAEQC,EAFR,yBAGSA,EAAaC,aAHtB,mIAMA,WAA4BjB,GAA5B,uFACyBY,MAAMC,EAAAA,OAAoBb,IADnD,cACQc,EADR,yBAESA,EAASC,QAFlB,yJAPIJ,qECmBN,QAlBuB,SAACO,GACtB,IAAMC,EAAYC,SAASC,cAAc,eAAeC,MAClDC,EAAcH,SAASC,cAAc,kBAAkBC,MAE7DE,IAAAA,KAAA,UACWlC,EAAAA,EAAAA,SADX,UACoC,CAChCU,GAAIkB,EACJO,KAAMN,EACNO,OAAQH,IAETI,MAAK,SAAUb,GACdc,QAAQC,IAAIf,EACb,IARH,OASS,SAAUgB,GACfF,QAAQC,IAAIC,EACb,GACJ,mCCVD,QATe,CACbC,SAAU,uCACVC,eAAgB,qDAChBC,WAAY,qBACZ5C,cAAe,4BACfE,iBAAkB,EAClBC,kBAAmB,kECGf0C,mBAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQhB,SAASC,cAAc,cAC/BgB,OAAQjB,SAASC,cAAc,aAC/BiB,QAASlB,SAASC,cAAc,mBAGlCkB,OAAOC,iBAAiB,cAAc,WACpCN,EAAIO,YACL,IAEDF,OAAOC,iBAAiB,QAAQ,WAC9BN,EAAIO,cACJC,EAAAA,EAAAA,IACD","sources":["webpack://katalog-restoran/./src/scripts/data/favorite-place-idb.js","webpack://katalog-restoran/./src/scripts/globals/api-endpoint.js","webpack://katalog-restoran/./src/scripts/data/katalogRestoranSource.js","webpack://katalog-restoran/./src/scripts/data/push-data-review.js","webpack://katalog-restoran/./src/scripts/globals/config.js","webpack://katalog-restoran/./src/scripts/index.js"],"sourcesContent":["/* eslint-disable no-prototype-builtins */\r\nimport { openDB } from 'idb'\r\nimport CONFIG from '../globals/config'\r\n\r\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n  upgrade(database) {\r\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' })\r\n  }\r\n})\r\n\r\nconst FavoritePlaceIdb = {\r\n  async getPlace(id) {\r\n    if (!id) {\r\n      return\r\n    }\r\n    return (await dbPromise).get(OBJECT_STORE_NAME, id)\r\n  },\r\n  async getAllPlaces() {\r\n    return (await dbPromise).getAll(OBJECT_STORE_NAME)\r\n  },\r\n  async putPlace(place) {\r\n    if (!place.hasOwnProperty('id')) {\r\n      return\r\n    }\r\n    return (await dbPromise).put(OBJECT_STORE_NAME, place)\r\n  },\r\n  async deletePlace(id) {\r\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id)\r\n  }\r\n}\r\n\r\nexport default FavoritePlaceIdb\r\n","import CONFIG from './config'\r\n\r\nconst API_ENDPOINT = {\r\n  KATALOG: `${CONFIG.BASE_URL}list`,\r\n  DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`\r\n}\r\n\r\nexport default API_ENDPOINT\r\n","import API_ENDPOINT from '../globals/api-endpoint'\r\n\r\nclass KatalogRestoranSource {\r\n  static async katalog() {\r\n    const response = await fetch(API_ENDPOINT.KATALOG)\r\n    const responseJson = await response.json()\r\n    return responseJson.restaurants\r\n  }\r\n\r\n  static async detailRestoran(id) {\r\n    const response = await fetch(API_ENDPOINT.DETAIL(id))\r\n    return response.json()\r\n  }\r\n}\r\n\r\nexport default KatalogRestoranSource\r\n","import axios from 'axios'\r\nimport CONFIG from '../globals/config'\r\n\r\nconst pushDataReview = (urlId) => {\r\n  const nameValue = document.querySelector('#input_name').value\r\n  const reviewValue = document.querySelector('#input_reviews').value\r\n\r\n  axios\r\n    .post(`${CONFIG.BASE_URL}review`, {\r\n      id: urlId,\r\n      name: nameValue,\r\n      review: reviewValue\r\n    })\r\n    .then(function (response) {\r\n      console.log(response)\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error)\r\n    })\r\n}\r\n\r\nexport default pushDataReview\r\n","const CONFIG = {\r\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\r\n  BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/medium/',\r\n  CACHE_NAME: 'KatalogRestoran-V1',\r\n  DATABASE_NAME: 'katalog-restoran-database',\r\n  DATABASE_VERSION: 1,\r\n  OBJECT_STORE_NAME: 'places'\r\n}\r\n\r\nexport default CONFIG\r\n","import 'regenerator-runtime'\r\nimport '../styles/main.css'\r\nimport App from './views/app'\r\n// eslint-disable-next-line no-unused-vars\r\nimport swRegister from './utils/sw-register'\r\nimport 'lazysizes'\r\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit'\r\n\r\n/* eslint-disable no-unused-vars */\r\nconst app = new App({\r\n  button: document.querySelector('#hamburger'),\r\n  drawer: document.querySelector('#nav-menu'),\r\n  content: document.querySelector('#mainContent')\r\n})\r\n\r\nwindow.addEventListener('hashchange', () => {\r\n  app.renderPage()\r\n})\r\n\r\nwindow.addEventListener('load', () => {\r\n  app.renderPage()\r\n  swRegister()\r\n})\r\n"],"names":["i","DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getPlace","id","get","getAllPlaces","getAll","putPlace","place","hasOwnProperty","put","deletePlace","KATALOG","DETAIL","KatalogRestoranSource","fetch","API_ENDPOINT","response","json","responseJson","restaurants","urlId","nameValue","document","querySelector","value","reviewValue","axios","name","review","then","console","log","error","BASE_URL","BASE_IMAGE_URL","CACHE_NAME","app","App","button","drawer","content","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}